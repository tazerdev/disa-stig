---
- hosts: localhost
  connection: local
  gather_facts: true
  become: true

  # ---------------------------------------------------------------------------
  # vars
  # ---------------------------------------------------------------------------
  vars:
    # we'll set this to true on a task-by-task basis if the stig requires a
    # reboot after changing a control
    needs_rebooting: false

    # toggle this to allow the system to be rebooted, if required
    allow_reboot: false

  # ---------------------------------------------------------------------------
  # pre-tasks
  # ---------------------------------------------------------------------------
  pre_tasks:
    # load service state up front so we can prevent actions on non-existent
    # services
    - name: "Populating ansible_facts.services."
      ansible.builtin.service_facts:
      changed_when: false
      check_mode: false
      tags:
        - always

    # load our package list up front so we can reduce time spent on package
    # dependent controls
    - name: "Populating ansible_facts.packages."
      ansible.builtin.package_facts:
        manager: auto
      changed_when: false
      check_mode: false
      tags:
        - always

    # we could cast a wider net for things like gdm or kdm, but this is a good
    # first effort
    - name: "Setting gui fact"
      ansible.builtin.set_fact:
        gui: true
      when: "'xorg-x11-server-Xorg' in ansible_facts.packages"
      tags:
        - always

    - name: "Testing for /sys/firmware/efi"
      ansible.builtin.stat:
        path: /sys/firmware/efi
      register: efi_path
      tags:
        - always

    - name: "Setting efi fact"
      ansible.builtin.set_fact:
        efi: true
      when: efi_path.stat.exists
      changed_when: false
      check_mode: false
      tags:
        - always

  # ---------------------------------------------------------------------------
  # roles
  # ---------------------------------------------------------------------------
  roles:
    - { role: rhel8 }

  # ---------------------------------------------------------------------------
  # post-tasks
  # ---------------------------------------------------------------------------
  post_tasks:
    # if yum-utils is installed we can check if the kernel or any any core
    # libraries/services have been updated
    - name: "Checking if system needs restarting."
      ansible.builtin.shell: |
        /usr/bin/needs-restarting -r
      register: needs_restarting
      when: "'yum-utils' in ansible_facts.packages"
      changed_when: false
      check_mode: false
      tags:
        - always

    - name: "Reboot if needed and allowed."
      ansible.builtin.reboot:
        reboot_timeout: 3600
      when: allow_reboot and (needs_rebooting or needs_restarting.rc|int > 0)
      tags:
        - always
